using System;
using System.Threading.Tasks;
using Microsoft.Bot.Builder.Dialogs;
using Microsoft.Bot.Connector;
using System.Collections.Generic;

namespace BotApplicationPSM.Dialogs
{
    [Serializable]
    public class RootDialog : IDialog<object>
    {
        
        public IEnumerable<string> Myoptions = new[] { "Events", "Cancel", "FAQ", "Blood_donation", "dental", "eye_checkup" };
        public async Task StartAsync(IDialogContext context)
        {
          
            context.Wait(ListOfoptions);           
        }

        private async Task ListOfoptions(IDialogContext context, IAwaitable<object> result)
        {
            await result;
            PromptDialog.Choice(context, select, Myoptions, "Please select one of the following options: - ", "Please try again", 3);
        }

        private async Task select(IDialogContext context, IAwaitable<string> result)
        {
            string act1;
        act1 = await result;                                        //storing result obtained in previous PromptDialog.Choice as string 
            act1 = act1.ToLower();                                      //for invariant comparisons
            if (act1 == "events")                                       //case 1    
            {
                //await DisplayHeroCard(context);                         //display hero cards with list of events
                 context.Call(new Show_events(), adone);
            }
            else if (act1.ToLowerInvariant() == "cancel")                    //case 2
            {
                //var re = context.MakeMessage();                         //make new message
                //re.Text = "Cancel working";                             //add text to message
                //await context.PostAsync(re);                            //display message text
                context.Call(new Cancelbooking(),adone);

            }
            else if (act1.ToLowerInvariant() == "faq")
            {
                //var re = context.MakeMessage();
                //re.Text = "FAQ working";
                //await context.PostAsync(re);
                context.Call(new FAQDialog(), adone);
            }
            else if (act1.ToLowerInvariant() == "blood_donation")
            {
                context.Call(new Blooddonationcnf(), adone);
            }
            else if (act1.ToLowerInvariant() == "dental")
            {
                context.Call(new Dentalcnf(), adone);
            }
            else if (act1.ToLowerInvariant() == "eye_checkup")
            {
                context.Call(new Eyecnf(), adone);
            }

            else
            {
                var re = context.MakeMessage();
                re.Text = "Try something from the options";
                await context.PostAsync(re);
            }
            //context.Done<bool>(true);
        }

        private async Task adone(IDialogContext context, IAwaitable<object> result)
        {
            context.Done<bool>(true);
        }

        //public async Task DisplayHeroCard(IDialogContext context)
        //{
        //    var replyMessage = context.MakeMessage();               //make a new message 
        //    replyMessage.Attachments = new List<Attachment>();      //define attachments to the message
        //    replyMessage.AttachmentLayout = "carousel";             //define attachment layout 

        //    /*here we define the 6 hero cards for the blood donation camp, dental camp, eye camp,
        //    diabetes camp, pulse polio camp and cancer checkup camp.*/

        //    var heroCard1 = new HeroCard                            //defining new hero card
        //    {
        //        // title of the card  
        //        Title = "Blood donation",
        //        //subtitle of the card  
        //        Subtitle = "Current event",
        //        //Detail Text  
        //        Text = "Raqt-daan ," + "\n"
        //        +Environment.NewLine +" jivan daan. Each drop matters!",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\Downloads\Blood_donation.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://www.organicfacts.net/health-benefits/other/blood-donation.html"), new CardAction(ActionTypes.OpenUrl, "Book now", value: "https://en.wikipedia.org/wiki/5_Gorkha_Rifles_(Frontier_Force)") }
        //    };

        //    Attachment plAttachment1 = heroCard1.ToAttachment();
        //    replyMessage.Attachments.Add(plAttachment1);
        //    var heroCard2 = new HeroCard
        //    {
        //        // title of the card  
        //        Title = "Dental camp",
        //        //subtitle of the card  
        //        Subtitle = "Current event",
        //        //Detail Text  
        //        Text = "Renowned dentists from the whole town come together to protect poeple's smiles!",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\documents\visual studio 2017\Projects\BotApplicationPSM\BotApplicationPSM\Images\Dental_camp.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://www.dentalcare.com/en-us/patient-education/patient-materials/why-are-regular-dental-visits-important"), new CardAction(ActionTypes.OpenUrl, "Book now", value: "https://www.tcs.com") }
        //    };
        //    Attachment plattachment2 = heroCard2.ToAttachment();
        //    replyMessage.Attachments.Add(plattachment2);

        //    var heroCard3 = new HeroCard            //defining new hero card for bone-density checkup camp
        //    {
        //        // title of the card  
        //        Title = "Eye camp",
        //        //subtitle of the card  
        //        Subtitle = "Current event",
        //        //Detail Text  
        //        Text = "All your eye related problems solved at one place, for free!",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\Downloads\Eye_camp.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://thinkaboutyoureyes.com/articles/eye-exams-and-health/why-are-eye-exams-important"), new CardAction(ActionTypes.OpenUrl, "Book now", value: "https://www.tcs.com") }
        //    };

        //    Attachment plattachment3 = heroCard3.ToAttachment(); //define herocard to be attachment
        //    replyMessage.Attachments.Add(plattachment3);         //attach the attachment to message

        //    var heroCard4 = new HeroCard            //defining new hero card 
        //    {
        //        // title of the card  
        //        Title = "Diabetes checkup and awareness camp",
        //        //subtitle of the card  
        //        Subtitle = "Past event",
        //        //Detail Text  
        //        Text = "Don't let diabetes stop you from enjoying your life, come to learn how !",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\Downloads\Diabetes_camp.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://www.mercola.com/diabetes.aspx") }
        //    };

        //    Attachment plattachment4 = heroCard4.ToAttachment(); //define herocard to be attachment
        //    replyMessage.Attachments.Add(plattachment4);         //attach the attachment to message

        //    var heroCard5 = new HeroCard            //defining new hero card 
        //    {
        //        // title of the card  
        //        Title = "Pulse Polio camp",
        //        //subtitle of the card  
        //        Subtitle = "Past event",
        //        // navigate to page , while tab on card  
        //        //Tap = new CardAction(ActionTypes.MessageBack="messageBack", "Book Appointment", value: "http://www.devenvexe.com"),
        //        //Detail Text  
        //        Text = "Let's make our country polio-free!",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\Downloads\Polio_camp2.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://www.nhp.gov.in/pulse-polio-programme_pg") }
        //    };

        //    Attachment plattachment5 = heroCard5.ToAttachment(); //define herocard to be attachment
        //    replyMessage.Attachments.Add(plattachment5);         //attach the attachment to message

        //    var heroCard6 = new HeroCard            //defining new hero card 
        //    {
        //        // title of the card  
        //        Title = "Cancer checkup camp",
        //        //subtitle of the card  
        //        Subtitle = "Past event",
        //        //Detail Text  
        //        Text = "Beat cancer, before it beats you!",
        //        // list of  Large Image  
        //        Images = new List<CardImage> { new CardImage(@"C:\Users\demouser2\Downloads\Cancer_camp2.jpg") },
        //        // list of buttons   
        //        Buttons = new List<CardAction> { new CardAction(ActionTypes.OpenUrl, "Learn More", value: "https://www.cancer.gov/about-cancer/understanding/what-is-cancer") }
        //    };

        //    Attachment plattachment6 = heroCard6.ToAttachment(); //define herocard to be attachment
        //    replyMessage.Attachments.Add(plattachment6);         //attach the attachment to message


        //    await context.PostAsync(replyMessage);               //post message (with hero cards as attachments) to user   

        //}

    }

}
